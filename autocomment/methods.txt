[   /// initBase
/// \param processP0Handler
/// \param processP1Handler
/// \param processP2Handler
/// \param moduleConfig
/// \param communicationInformation
/// \param powerFailRTE
/// \param chipReset
/// \param pdIrq
/// \param mbxIrq
/// \param memory
/// \param deviceShutdown
/// \param reset
/// \param hardwareInformation
/// \param firmwareVersionInformation
/// \return,
    /// sendDeviceInformations
/// \param deviceIdent
/// \return,
    /// doLedTest
/// \param state
/// \return,
    /// enableProcessDataTransfer,
    /// startCyclicOperation,
    /// getPidP0
/// \return,
    /// getPidP1
/// \return,
    /// getPidP2
/// \return,
    /// getDiagnosisHandler
/// \return,
    /// getMemoryChannel
/// \return,
    /// getBaseDriver
/// \return,
    /// getNrtDriver
/// \return,
    /// updateWatchdog,
    /// updateAsync,
    /// checkDeviceShutdown,
    /// getMailboxManager
/// \return,
    /// getProcessManager
/// \return,
    /// newPDxData
/// \param data
/// \param buf_size,
    /// processPDxData
/// \param buf
/// \param buf_size
/// \return,
    /// pdIrqSetState
/// \param state,
    /// mbxIrqSetState
/// \param state,
    /// sendCoeServiceDataReadRequest
/// \param index
/// \param subIndex
/// \param dataSize
/// \param completeAccess,
    /// registerCoeServiceDataHandler
/// \param serviceDataHandler,
    /// registerFoeServiceDataHandler
/// \param foeHandler,
    /// registerProcessDataConfigurationHandler
/// \param pdConfigHandler,
    /// updateProfinetModuleConfiguration
/// \return,
    /// sendEtherCatDeviceIdentification
/// \param explDevId
/// \return,
    /// sendProfiNetDeviceIdentification
/// \param deviceIdent
/// \return]